<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org</groupId>
	<artifactId>springboot-angular</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-boot-angular</name>
	<packaging>war</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.0</version>
	</parent>

	<properties>
		<resources.dir>${project.basedir}/src/main/resources</resources.dir>
		<resources.dir.env>${project.basedir}/src/main/resources-dev</resources.dir.env>
		<frontend.src.dir>${project.basedir}/src/main/js/angularapp</frontend.src.dir>
		<frontend.dist.dir>${project.basedir}/src/main/js/angularapp/dist</frontend.dist.dir>
		<java.version>17</java.version>
		<node.version>v20.2.0</node.version>
		<final.name>springbootangulardev</final.name>
		<skip.back>false</skip.back>
		<skip.front>true</skip.front>
		<skip.dev>false</skip.dev>
		<skip.prod>true</skip.prod>
		<skip.embedded>false</skip.embedded>
		<skip.container>true</skip.container>
		<build.configuration>build</build.configuration>
		<frontend.app.name>angularfront</frontend.app.name>
		<main.class>org.springbootangular.app.ApplicationEmbedded</main.class>
		<sonar.host.url>http://localhost:9000</sonar.host.url>
		<sonar.token>sqa_35a0e91883557bd596c441f96626147fffda0e0e</sonar.token>
	</properties>

	<profiles>
		<profile>
			<id>default</id>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
				<final.name>springbootangulardev</final.name>
				<resources.dir.env>${project.basedir}/src/main/resources-dev</resources.dir.env>
				<main.class>org.springbootangular.app.ApplicationEmbedded</main.class>
				<frontend.app.base.href>/angularapp-dev/</frontend.app.base.href>
				<skip.back>false</skip.back>
				<skip.front>false</skip.front>
				<skip.dev>false</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>false</skip.embedded>
				<skip.container>true</skip.container>
				<build.configuration>build</build.configuration>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
				<final.name>springbootangulardev</final.name>
				<resources.dir.env>${project.basedir}/src/main/resources-dev</resources.dir.env>
				<main.class>org.springbootangular.app.ApplicationEmbedded</main.class>
				<skip.back>false</skip.back>
				<skip.front>true</skip.front>
				<skip.dev>false</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>false</skip.embedded>
				<skip.container>true</skip.container>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
				<final.name>springbootangulardev</final.name>
				<resources.dir.env>${project.basedir}/src/main/resources-prod</resources.dir.env>
				<main.class>org.springbootangular.app.ApplicationEmbedded</main.class>
				<skip.back>false</skip.back>
				<skip.front>true</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>false</skip.prod>
				<skip.embedded>false</skip.embedded>
				<skip.container>true</skip.container>
			</properties>
		</profile>
		<profile>
			<id>container</id>
			<properties>
				<spring.profiles.active>container</spring.profiles.active>
				<final.name>springbootangulardev</final.name>
				<resources.dir.env>${project.basedir}/src/main/resources-container</resources.dir.env>
				<main.class>org.springbootangular.app.Application</main.class>
				<skip.back>false</skip.back>
				<skip.front>true</skip.front>
				<skip.dev>false</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>false</skip.container>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>container-prod</id>
			<properties>
				<spring.profiles.active>container-prod</spring.profiles.active>
				<final.name>springbootangular</final.name>
				<resources.dir.env>${project.basedir}/src/main/resources-container-prod</resources.dir.env>
				<main.class>org.springbootangular.app.Application</main.class>
				<skip.back>false</skip.back>
				<skip.front>true</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>false</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>false</skip.container>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>front-dev</id>
			<properties>
				<skip.back>true</skip.back>
				<skip.front>false</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>true</skip.container>
				<frontend.app.base.href>/angularapp-dev/</frontend.app.base.href>
				<build.configuration>build</build.configuration>				
			</properties>
			<build>
			</build>
		</profile>
		<profile>
			<id>front-prod</id>
			<properties>
				<skip.back>true</skip.back>
				<skip.front>false</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>true</skip.container>
				<frontend.app.base.href>/angularapp/</frontend.app.base.href>
				<build.configuration>prod</build.configuration>				
			</properties>
		</profile>
		<profile>
			<id>front-container</id>
			<properties>
				<skip.back>true</skip.back>
				<skip.front>false</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>true</skip.container>
				<final.name>springbootangulardev</final.name>				
				<frontend.app.base.href>/${final.name}/angularapp-dev/</frontend.app.base.href>
				<build.configuration>container</build.configuration>				
			</properties>
		</profile>
		<profile>
			<id>front-container-prod</id>
			<properties>
				<skip.back>true</skip.back>
				<skip.front>false</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>true</skip.container>
				<final.name>springbootangular</final.name>
				<frontend.app.base.href>/${final.name}/angularapp/</frontend.app.base.href>
				<build.configuration>container-prod</build.configuration>				
			</properties>
		</profile>
		<profile>
			<id>clean-front</id>
			<properties>
				<skip.back>true</skip.back>
				<skip.front>false</skip.front>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<executions>
							<execution>
								<id>clean-front-clean</id>
								<phase>clean</phase>
								<goals>
									<goal>clean</goal>
								</goals>
								<configuration>
									<excludeDefaultDirectories>true</excludeDefaultDirectories>
									<filesets>
										<fileset>
											<directory>${frontend.src.dir}/node</directory>
											<includes>
												<include>**</include>
											</includes>
										</fileset>
										<fileset>
											<directory>${frontend.src.dir}/node_modules</directory>
										</fileset>
										<fileset>
											<directory>${frontend.dist.dir}/${frontend.app.name}</directory>
											<includes>
												<include>**/*</include>
											</includes>
										</fileset>
										<fileset>
											<directory>${frontend.src.dir}/.angular</directory>
										</fileset>
										<fileset>
											<directory>${frontend.src.dir}/.scannerwork</directory>
										</fileset>
									</filesets>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.12.1</version>
						<configuration>
							<nodeVersion>${node.version}</nodeVersion>
							<installDirectory>${frontend.src.dir}</installDirectory>
							<workingDirectory>${frontend.src.dir}</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>npm-test</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>test</phase>
								<configuration>
									<arguments>run-script test -- --watch=false</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.1.0</version><!--$NO-MVN-MAN-VER$ -->
						<configuration>
							<skip>false</skip>
							<argLine>-Dspring.profiles.active=${spring.profiles.active}</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.12.1</version>
						<configuration>
							<nodeVersion>${node.version}</nodeVersion>
							<installDirectory>${frontend.src.dir}</installDirectory>
							<workingDirectory>${frontend.src.dir}</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>npm-sonar</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>validate</phase>
								<configuration>
									<arguments>run-script sonar</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>3.9.1.2184</version>
						<executions>
							<execution>
								<id>java-sonar</id>
								<goals>
									<goal>sonar</goal>
								</goals>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<build>
		<finalName>${final.name}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<executions>
					<execution>
						<id>clean-default</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.back}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.basedir}/target</directory>
									<includes>
										<include>**/*.properties</include>
										<include>**/*.xml</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>clean-java-for-prod</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.prod}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.basedir}/target/test-classes</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${project.basedir}/target/classes</directory>
									<includes>
										<include>**/dev/**</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>clean-java-for-container</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.container}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.basedir}/target/test-classes</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${project.basedir}/target/classes</directory>
									<includes>
										<include>**/*Embedded*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>clean-front</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.front}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${frontend.dist.dir}/${frontend.app.name}</directory>
									<includes>
										<include>**</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${project.basedir}/target/classes/static</directory>
									<includes>
										<include>**</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>initialize-front</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.front}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${frontend.dist.dir}/${frontend.app.name}</directory>
									<includes>
										<include>**</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${project.basedir}/target/classes/static</directory>
									<includes>
										<include>**</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>default-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.back}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.basedir}/target</directory>
									<includes>
										<include>**/*</include>
									</includes>
									<excludes>
										<exclude>classes/static/**</exclude>
									</excludes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>clean-logs</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.back}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.basedir}/logs</directory>
									<includes>
										<include>*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.12.1</version>
				<configuration>
					<skip>${skip.front}</skip>
					<nodeVersion>${node.version}</nodeVersion>
					<installDirectory>${frontend.src.dir}</installDirectory>
					<workingDirectory>${frontend.src.dir}</workingDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install-npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
					<execution>
						<id>npm-install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<arguments>install</arguments>
							<installDirectory>${frontend.src.dir}</installDirectory>
						</configuration>
					</execution>
					<execution>
						<id>npm-build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<arguments>run-script ${build.configuration} -- --base-href ${frontend.app.base.href}</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<skipMain>true</skipMain>
						</configuration>
					</execution>
					<execution>
						<id>default-compile-dev</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<skipMain>${skip.dev}</skipMain>
							<useIncrementalCompilation>false</useIncrementalCompilation>
							<source>${java.version}</source>
							<target>${java.version}</target>
							<excludes>
								<exclude>**/*Embedded*</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>default-compile-prod</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<skipMain>${skip.prod}</skipMain>
							<useIncrementalCompilation>false</useIncrementalCompilation>
							<source>${java.version}</source>
							<target>${java.version}</target>
							<excludes>
								<exclude>**/dev/**</exclude>
								<exclude>**/*Embedded*</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>default-compile-embedded</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<skipMain>${skip.embedded}</skipMain>
							<useIncrementalCompilation>false</useIncrementalCompilation>
							<source>${java.version}</source>
							<target>${java.version}</target>
							<includes>
								<include>**/*Embedded*</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<phase>test-compile</phase>
						<configuration>
							<skip>${skip.prod}</skip>
							<testExcludes>
								<exclude>**/*Test.java</exclude>
							</testExcludes>
						</configuration>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
					<execution>
						<id>default-compile-test</id>
						<phase>test-compile</phase>
						<configuration>
							<skip>${skip.dev}</skip>
							<testIncludes>
								<testInclude>**/*Test.java</testInclude>
							</testIncludes>
						</configuration>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>default-resources</id>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
					<execution>
						<id>java-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<skip>${skip.back}</skip>
							<outputDirectory>${project.basedir}/target/classes</outputDirectory>
							<resources>
								<resource>
									<directory>${resources.dir}</directory>
								</resource>
								<resource>
									<directory>${resources.dir.env}</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>prepare-dist</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<skip>${skip.front}</skip>
							<outputDirectory>${project.basedir}/target/classes</outputDirectory>
							<resources>
								<resource>
									<directory>${frontend.dist.dir}/${frontend.app.name}</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>default-testResources</id>
						<phase>test</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
						<configuration>
							<resources>
								<excludes>
									<exclude>**</exclude>
								</excludes>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>default-resources-test</id>
						<phase>test</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
						<configuration>
							<skip>${skip.dev}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<profiles>
						<profile>${spring.profiles.active}</profile>
					</profiles>
					<mainClass>${main.class}</mainClass>
				</configuration>
			</plugin>
			<plugin>            
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-war-plugin</artifactId>
			  <configuration>
			    <failOnMissingWebXml>false</failOnMissingWebXml>
			  </configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-clean-plugin
										</artifactId>
										<versionRange>
											[3.2.0,)
										</versionRange>
										<goals>
											<goal>clean</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


</project>
