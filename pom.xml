<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org</groupId>
	<artifactId>springboot-angular</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-boot-angular</name>
	<packaging>war</packaging>

	<properties>
		<resources.dir>${project.basedir}/src/main/resources</resources.dir>
		<frontend.src.dir>${project.basedir}/src/main/js/angularapp</frontend.src.dir>
		<frontend.dist.dir>${project.basedir}/src/main/js/angularapp/dist</frontend.dist.dir>
		<java.version>17</java.version>
		<node.version>v20.2.0</node.version>
		<frontend.app.name>angularfront</frontend.app.name>
		<skip.shade>true</skip.shade>
		<sonar.host.url>http://localhost:9000</sonar.host.url>
		<sonar.token>sqa_35a0e91883557bd596c441f96626147fffda0e0e</sonar.token>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<skip.test>true</skip.test>
	</properties>

	<profiles>
		<profile>
			<id>default</id>
			<properties>
				<spring.profiles.active>container-prod</spring.profiles.active>
				<final.name>springbootangular</final.name>
				<resources.dir.env>${project.basedir}/src/main/resources-container-prod</resources.dir.env>
				<main.class>org.springbootangular.app.Application</main.class>
				<frontend.app.base.href>/${final.name}/angularapp/</frontend.app.base.href>
				<skip.back>false</skip.back>
				<skip.front>false</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>false</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>false</skip.container>
				<build.configuration>container-prod</build.configuration>
				<skip.shade>true</skip.shade>
				<skip.test>true</skip.test>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
				<final.name>springbootangulardev</final.name>
				<resources.dir.env>${project.basedir}/src/main/resources-dev</resources.dir.env>
				<main.class>org.springbootangular.app.ApplicationEmbedded</main.class>
				<skip.back>false</skip.back>
				<skip.front>true</skip.front>
				<skip.dev>false</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>false</skip.embedded>
				<skip.container>true</skip.container>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
				<final.name>springbootangulardev</final.name>
				<resources.dir.env>${project.basedir}/src/main/resources-prod</resources.dir.env>
				<main.class>org.springbootangular.app.ApplicationEmbedded</main.class>
				<skip.back>false</skip.back>
				<skip.front>true</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>false</skip.prod>
				<skip.embedded>false</skip.embedded>
				<skip.container>true</skip.container>
			</properties>
		</profile>
		<profile>
			<id>container</id>
			<properties>
				<spring.profiles.active>container</spring.profiles.active>
				<final.name>springbootangulardev</final.name>
				<resources.dir.env>${project.basedir}/src/main/resources-container</resources.dir.env>
				<main.class>org.springbootangular.app.Application</main.class>
				<skip.back>false</skip.back>
				<skip.front>true</skip.front>
				<skip.dev>false</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>false</skip.container>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-core</artifactId>
					<version>10.1.9</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.tomcat</groupId>
					<artifactId>tomcat-annotations-api</artifactId>
					<version>10.1.9</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-websocket</artifactId>
					<version>10.1.9</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>container-prod</id>
			<properties>
				<spring.profiles.active>container-prod</spring.profiles.active>
				<final.name>springbootangular</final.name>
				<resources.dir.env>${project.basedir}/src/main/resources-container-prod</resources.dir.env>
				<main.class>org.springbootangular.app.Application</main.class>
				<skip.back>false</skip.back>
				<skip.front>true</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>false</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>false</skip.container>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-core</artifactId>
					<version>10.1.9</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.tomcat</groupId>
					<artifactId>tomcat-annotations-api</artifactId>
					<version>10.1.9</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-websocket</artifactId>
					<version>10.1.9</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>front-dev</id>
			<properties>
				<skip.back>true</skip.back>
				<skip.front>false</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>true</skip.container>
				<frontend.app.base.href>/angularapp-dev/</frontend.app.base.href>
				<build.configuration>build</build.configuration>
			</properties>
			<build>
			</build>
		</profile>
		<profile>
			<id>front-prod</id>
			<properties>
				<skip.back>true</skip.back>
				<skip.front>false</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>true</skip.container>
				<frontend.app.base.href>/angularapp/</frontend.app.base.href>
				<build.configuration>prod</build.configuration>
			</properties>
		</profile>
		<profile>
			<id>front-container</id>
			<properties>
				<skip.back>true</skip.back>
				<skip.front>false</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>true</skip.container>
				<final.name>springbootangulardev</final.name>
				<frontend.app.base.href>/${final.name}/angularapp-dev/</frontend.app.base.href>
				<build.configuration>container</build.configuration>
			</properties>
		</profile>
		<profile>
			<id>front-container-prod</id>
			<properties>
				<skip.back>true</skip.back>
				<skip.front>false</skip.front>
				<skip.dev>true</skip.dev>
				<skip.prod>true</skip.prod>
				<skip.embedded>true</skip.embedded>
				<skip.container>true</skip.container>
				<final.name>springbootangular</final.name>
				<frontend.app.base.href>/${final.name}/angularapp/</frontend.app.base.href>
				<build.configuration>container-prod</build.configuration>
			</properties>
		</profile>
		<profile>
			<id>clean-front</id>
			<properties>
				<skip.back>true</skip.back>
				<skip.front>false</skip.front>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>clean-front-clean</id>
								<phase>clean</phase>
								<goals>
									<goal>clean</goal>
								</goals>
								<configuration>
									<excludeDefaultDirectories>true</excludeDefaultDirectories>
									<filesets>
										<fileset>
											<directory>${frontend.src.dir}/node</directory>
											<includes>
												<include>**</include>
											</includes>
										</fileset>
										<fileset>
											<directory>${frontend.src.dir}/node_modules</directory>
										</fileset>
										<fileset>
											<directory>${frontend.dist.dir}/${frontend.app.name}</directory>
											<includes>
												<include>**/*</include>
											</includes>
										</fileset>
										<fileset>
											<directory>${frontend.src.dir}/.angular</directory>
										</fileset>
										<fileset>
											<directory>${frontend.src.dir}/.scannerwork</directory>
										</fileset>
									</filesets>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
				<resources.dir.env>${project.basedir}/src/main/resources-dev</resources.dir.env>
				<frontend.app.base.href>/angularapp-dev/</frontend.app.base.href>
				<build.configuration>build</build.configuration>
				<skip.back>false</skip.back>
				<skip.front>false</skip.front>
				<skip.test>false</skip.test>
			</properties>
		</profile>
		<profile>
			<id>sonar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.12.1</version>
						<configuration>
							<nodeVersion>${node.version}</nodeVersion>
							<installDirectory>${frontend.src.dir}</installDirectory>
							<workingDirectory>${frontend.src.dir}</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>npm-sonar</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>validate</phase>
								<configuration>
									<arguments>run-script sonar</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>3.9.1.2184</version>
						<executions>
							<execution>
								<id>java-sonar</id>
								<goals>
									<goal>sonar</goal>
								</goals>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>6.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.9.19</version>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>5.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>6.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>6.2.2.Final</version>
		</dependency>
		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>jakarta.transaction</groupId>
			<artifactId>jakarta.transaction-api</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<version>3.5.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.common</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>6.0.6.Final</version>
		</dependency>
		<dependency>
			<groupId>io.smallrye</groupId>
			<artifactId>jandex</artifactId>
			<version>3.0.5</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml</groupId>
			<artifactId>classmate</artifactId>
			<version>1.5.1</version>
		</dependency>
		<dependency>
			<groupId>net.bytebuddy</groupId>
			<artifactId>byte-buddy</artifactId>
			<version>1.12.18</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>4.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>4.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.angus</groupId>
			<artifactId>angus-activation</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>txw2</artifactId>
			<version>4.0.2</version>
		</dependency>
		<dependency>
			<groupId>com.sun.istack</groupId>
			<artifactId>istack-commons-runtime</artifactId>
			<version>4.1.1</version>
		</dependency>
		<dependency>
			<groupId>jakarta.inject</groupId>
			<artifactId>jakarta.inject-api</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<version>4.10.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>6.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>6.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>6.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>6.0.9</version>
		</dependency>
		<dependency>
			<groupId>jakarta.annotation</groupId>
			<artifactId>jakarta.annotation-api</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>6.0.9</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.4.7</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.4.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-to-slf4j</artifactId>
			<version>2.20.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.20.0</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>2.0.7</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.33</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.15.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.15.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.15.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>2.15.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>2.15.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
			<version>2.15.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>6.0.9</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-observation</artifactId>
			<version>1.10.7</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-commons</artifactId>
			<version>1.10.7</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>6.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>6.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-el</artifactId>
			<version>10.1.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>10.1.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-annotations-api</artifactId>
			<version>10.1.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-websocket</artifactId>
			<version>10.1.9</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>8.0.0.Final</version>
		</dependency>
		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<version>3.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.26</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>2.1.214</version>
		</dependency>
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>4.0.0</version>
		</dependency>
		<dependency>
			<groupId>jakarta.activation</groupId>
			<artifactId>jakarta.activation-api</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>6.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jcl</artifactId>
			<version>6.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<version>3.1.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
			<version>3.1.0</version>
		</dependency>
		<!-- TEST DEPENDENCIES -->
		<dependency>
			<groupId>net.minidev</groupId>
			<artifactId>accessors-smart</artifactId>
			<version>2.4.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>5.9.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.xmlunit</groupId>
			<artifactId>xmlunit-core</artifactId>
			<version>2.9.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.8.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.bytebuddy</groupId>
			<artifactId>byte-buddy-agent</artifactId>
			<version>1.14.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.9.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-commons</artifactId>
			<version>1.9.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<version>3.1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test-autoconfigure</artifactId>
			<version>3.1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.minidev</groupId>
			<artifactId>json-smart</artifactId>
			<version>2.4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm</artifactId>
			<version>9.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.24.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.9.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.9.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<version>3.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>5.3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.skyscreamer</groupId>
			<artifactId>jsonassert</artifactId>
			<version>1.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin.external.google</groupId>
			<artifactId>android-json</artifactId>
			<version>0.0.20131108.vaadin1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>6.0.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>5.9.3</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>hamcrest-core</artifactId>
					<groupId>org.hamcrest</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-engine</artifactId>
			<version>1.9.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.opentest4j</groupId>
			<artifactId>opentest4j</artifactId>
			<version>1.2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apiguardian</groupId>
			<artifactId>apiguardian-api</artifactId>
			<version>1.1.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>${final.name}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>clean-default</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.back}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.basedir}/target</directory>
									<includes>
										<include>**/*.properties</include>
										<include>**/*.xml</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>clean-java-for-prod</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.prod}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.basedir}/target/test-classes</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${project.basedir}/target/classes</directory>
									<includes>
										<include>**/dev/**</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>clean-java-for-container</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.container}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.basedir}/target/test-classes</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${project.basedir}/target/classes</directory>
									<includes>
										<include>**/*Embedded*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>clean-front</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.front}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${frontend.dist.dir}/${frontend.app.name}</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${project.basedir}/target/classes/static</directory>
									<includes>
										<include>**</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>initialize-front</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.front}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${frontend.dist.dir}/${frontend.app.name}</directory>
									<includes>
										<include>**</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${project.basedir}/target/classes/static</directory>
									<includes>
										<include>**</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>default-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.back}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.basedir}/target</directory>
									<includes>
										<include>**/*</include>
									</includes>
									<excludes>
										<exclude>classes/static/**</exclude>
									</excludes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>clean-logs</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<skip>${skip.back}</skip>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.basedir}/logs</directory>
									<includes>
										<include>*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.12.1</version>
				<configuration>
					<skip>${skip.front}</skip>
					<nodeVersion>${node.version}</nodeVersion>
					<installDirectory>${frontend.src.dir}</installDirectory>
					<workingDirectory>${frontend.src.dir}</workingDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install-npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
					<execution>
						<id>npm-install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<arguments>install</arguments>
							<installDirectory>${frontend.src.dir}</installDirectory>
						</configuration>
					</execution>
					<execution>
						<id>npm-build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<arguments>run-script ${build.configuration} -- --base-href ${frontend.app.base.href}</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm-test</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<arguments>run-script test -- --watch=false</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<skipMain>true</skipMain>
						</configuration>
					</execution>
					<execution>
						<id>default-compile-dev</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<skipMain>${skip.dev}</skipMain>
							<useIncrementalCompilation>false</useIncrementalCompilation>
							<excludes>
								<exclude>**/*Embedded*</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>default-compile-prod</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<skipMain>${skip.prod}</skipMain>
							<useIncrementalCompilation>false</useIncrementalCompilation>
							<source>${java.version}</source>
							<target>${java.version}</target>
							<excludes>
								<exclude>**/dev/**</exclude>
								<exclude>**/*Embedded*</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>default-compile-embedded</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<skipMain>${skip.embedded}</skipMain>
							<useIncrementalCompilation>false</useIncrementalCompilation>
							<source>${java.version}</source>
							<target>${java.version}</target>
							<includes>
								<include>**/*Embedded*</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<phase>test-compile</phase>
						<configuration>
							<skip>${skip.prod}</skip>
							<testExcludes>
								<exclude>**/*Test.java</exclude>
							</testExcludes>
						</configuration>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
					<execution>
						<id>default-compile-test</id>
						<phase>test-compile</phase>
						<configuration>
							<skip>${skip.dev}</skip>
							<testIncludes>
								<testInclude>**/*Test.java</testInclude>
							</testIncludes>
						</configuration>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>default-resources</id>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
					<execution>
						<id>java-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<skip>${skip.back}</skip>
							<outputDirectory>${project.basedir}/target/classes</outputDirectory>
							<resources>
								<resource>
									<directory>${resources.dir}</directory>
								</resource>
								<resource>
									<directory>${resources.dir.env}</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>prepare-dist</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<skip>${skip.front}</skip>
							<outputDirectory>${project.basedir}/target/classes</outputDirectory>
							<resources>
								<resource>
									<directory>${frontend.dist.dir}/${frontend.app.name}</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>default-testResources</id>
						<phase>test</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
						<configuration>
							<resources>
								<excludes>
									<exclude>**</exclude>
								</excludes>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>default-resources-test</id>
						<phase>test</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
						<configuration>
							<skip>${skip.dev}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<skip>${skip.embedded}</skip>
					<profiles>
						<profile>${spring.profiles.active}</profile>
					</profiles>
					<mainClass>${main.class}</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.2</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<includeEmptyDirectories>false</includeEmptyDirectories>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.4.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<skip>${skip.shade}</skip>
							<shadeTestJar>false</shadeTestJar>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>module-info.class</exclude>
										<exclude>license.txt</exclude>
										<exclude>notice.txt</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.1.0</version><!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<skip>${skip.test}</skip>
					<argLine>-Dspring.profiles.active=${spring.profiles.active}</argLine>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-clean-plugin
										</artifactId>
										<versionRange>
											[3.2.0,)
										</versionRange>
										<goals>
											<goal>clean</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


</project>
